# Sname: Deploy static content to Pages

on:
  # Ejecuta el flujo de trabajo en los pushes a la rama `master`
  push:
    branches: ["master"]

  # Permite ejecutar este flujo de trabajo manualmente desde la pesta침a de Actions
  workflow_dispatch:

# Establece permisos del GITHUB_TOKEN para permitir la implementaci칩n en GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Permitir solo una implementaci칩n concurrente
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build and Deploy to GitHub Pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configurar nombre y correo del usuario de Git
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # Crear una rama temporal para el despliegue
          git checkout -b gh-pages

          # Mover el contenido est치tico a la rama gh-pages
          rm -rf *
          cp -r * . || exit 1
          git add .
          git commit -m "Deploy static content to GitHub Pages"
          git push --force origin gh-pages

          # Cambiar a la rama principal (master)
          git checkout master

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
